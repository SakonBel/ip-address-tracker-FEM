{"version":3,"sources":["components/Info.js","images/icon-arrow.svg","components/SearchBar.js","App.js","index.js"],"names":["Info","information","className","ip","location","timezone","isp","SearchBar","handleChange","handleSubmit","typeAddress","typeText","useState","window","innerWidth","size","setSize","handleResize","useEffect","addEventListener","removeEventListener","onSubmit","e","type","name","placeholder","onChange","onClick","src","arrow","alt","pattern","App","setInformation","address","setAddress","domainName","setDomainName","domain","ipAddress","ifDomain","ifIP","setTypeText","setTypeAddress","textValue","useRef","position","setPosition","namePopup","setNamePopup","countryPopup","setCountryPopup","fetch","process","then","res","json","data","newInfo","region","city","postalCode","lat","lng","as","country","catch","err","console","log","current","target","value","typeValue","test","result","preventDefault","Map","center","tileSize","zoom","scrollWheelZoom","TileLayer","attribution","url","ZoomControl","Marker","Popup","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f449341.chunk.js","sourcesContent":["const Info = ({ information }) => {\n  return (\n    <ul className=\"info-list bg-white rounded-xl flex flex-col md:flex-row   items-center text-center py-5 mt-6 mx-auto md:mt-12 max-w-lg md:max-w-4xl xl:max-w-med justify-evenly relative z-20\">\n      <li className=\"info-item duration-200\">\n        <div className=\"\">\n          <h2 className=\"info-title \">IP Address</h2>\n          {information && <p className=\"info-detail\">{information.ip}</p>}\n        </div>\n      </li>\n      <li className=\"info-item flex-1\">\n        <div>\n          <h2 className=\"info-title\">Location</h2>\n          {information && <p className=\"info-detail\">{information.location}</p>}\n        </div>\n      </li>\n      <li className=\"info-item flex-1\">\n        <div>\n          <h2 className=\"info-title\">Timezone</h2>\n          {information && <p className=\"info-detail\">{information.timezone}</p>}\n        </div>\n      </li>\n      <li className=\"info-item flex-1 last\">\n        <div>\n          <h2 className=\"info-title\">ISP</h2>\n          {information && <p className=\"info-detail\">{information.isp}</p>}\n        </div>\n      </li>\n    </ul>\n  );\n};\n\nexport default Info;\n","export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import React, { useEffect, useState } from \"react\";\nimport arrow from \"../images/icon-arrow.svg\";\n\nconst SearchBar = ({ handleChange, handleSubmit, typeAddress, typeText }) => {\n  const [size, setSize] = useState(window.innerWidth);\n\n  const handleResize = () => {\n    setSize(window.innerWidth);\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n\n    return window.removeEventListener(\"resize\", handleResize);\n  }, []);\n\n  return (\n    <div className=\"search-box\">\n      <form\n        className=\"flex justify-center items-center mx-auto max-w-lg\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <input\n          className=\"h-14 w-full rounded-l-xl pl-7\"\n          type=\"text\"\n          name=\"search\"\n          placeholder={\n            size && size > 460\n              ? \"Search for any IP address or domain\"\n              : \"Search for IP or domain\"\n          }\n          onChange={(e) => handleChange(e)}\n        />\n        <button\n          className=\"bg-black h-14 w-16 px-2 flex items-center justify-center rounded-r-xl hover:bg-gray-800\"\n          onClick={handleSubmit}\n        >\n          <img src={arrow} alt=\"\" />\n        </button>\n      </form>\n      {typeText === \"invalid\" && (\n        <p className=\"text-yellow-400\">\n          Please insert available domain name. E.g. \"google.com\"\n        </p>\n      )}\n      {typeAddress === \"invalid\" && (\n        <p className=\"text-yellow-200\">\n          Please insert available IP address. E.g. \"100.100.100.100\"\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import Info from \"./components/Info\";\nimport SearchBar from \"./components/SearchBar\";\nimport { Map, TileLayer, ZoomControl, Marker, Popup } from \"react-leaflet\";\nimport { useEffect, useRef, useState } from \"react\";\nconst pattern = {\n  domain: /^([\\w@-]+)(\\.[\\w@-]+)?(\\.[\\w@-]+)?\\.([a-z]{2,8})(\\.[a-z]{2,8})?$/,\n  ipAddress: /^([1-2]?[0-9]?[0-9]\\.){3}([1-2]?[0-9]?[0-9])$/,\n  ifDomain: /^[\\w]+/i,\n  ifIP: /^[0-9]+/,\n};\n\nfunction App() {\n  const [information, setInformation] = useState(null);\n  const [address, setAddress] = useState(\"\");\n  const [domainName, setDomainName] = useState(\"\");\n  const { domain, ipAddress, ifDomain, ifIP } = pattern;\n  const [typeText, setTypeText] = useState(\"\");\n  const [typeAddress, setTypeAddress] = useState(\"\");\n  const textValue = useRef(\"\");\n  const [position, setPosition] = useState(null);\n  const [namePopup, setNamePopup] = useState(\"\");\n  const [countryPopup, setCountryPopup] = useState(\"\");\n\n  const handleChange = (e) => {\n    textValue.current = e.target.value;\n    const typeValue = textValue.current;\n    if (ifIP.test(typeValue)) {\n      const result = ipAddress.test(typeValue);\n\n      if (result) {\n        setTypeAddress(\"valid\");\n      } else {\n        setTypeAddress(\"invalid\");\n      }\n    } else if (ifDomain.test(typeValue)) {\n      const result = domain.test(typeValue);\n\n      if (result) {\n        setTypeText(\"valid\");\n      } else {\n        setTypeText(\"invalid\");\n      }\n    } else {\n      setTypeAddress(\"\");\n      setTypeText(\"\");\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (typeAddress === \"valid\") {\n      setAddress(textValue.current);\n      setDomainName(\"\");\n    }\n\n    if (typeText === \"valid\") {\n      setDomainName(textValue.current);\n      setAddress(\"\");\n    }\n  };\n\n  useEffect(() => {\n    fetch(\n      `https://geo.ipify.org/api/v1?apiKey=${process.env.REACT_APP_IPIFY_KEY}ipAddress=${address}&domain=${domainName}`\n    )\n      .then((res) => res.json())\n      .then((data) => {\n        const newInfo = {\n          ip: data.ip,\n          location: `${data.location.region}, ${data.location.city} ${data.location.postalCode}`,\n          timezone: `UTC${data.location.timezone}`,\n          isp: data.isp,\n        };\n        setInformation(newInfo);\n        setPosition([data.location.lat, data.location.lng]);\n        setNamePopup(data.as.name);\n        setCountryPopup(data.location.country);\n      })\n      .catch((err) => console.log(err));\n  }, [address, domainName]);\n\n  return (\n    <div className=\"App h-screen xs:min-h-minitab sm:min-h-tablet md:min-h-reverse min-h-mobile\">\n      <header className=\"bg-cover text-center px-6 h-2/5 xl:h-hlg xl:min-h-desk duration-200\">\n        <h1 className=\"text-2xl font-medium text-white py-7\">\n          IP Address Tracker\n        </h1>\n        <SearchBar\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          typeAddress={typeAddress}\n          typeText={typeText}\n        />\n        <Info information={information} />\n      </header>\n      <main className=\"h-3/5 md:min-h-tab xl:h-mlg duration-200\">\n        <Map center={position} tileSize={256} zoom={13} scrollWheelZoom={true}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a> contributors'\n            url={`${process.env.REACT_APP_MAPBOX_URL}streets-v11/tiles/{z}/{x}/{y}?access_token=${process.env.REACT_APP_MAPBOX_KEY}`}\n          />\n          <ZoomControl position={\"bottomleft\"} />\n          <Marker position={position}>\n            <Popup>\n              <p className=\"text-yellow-600 text-lg\">\n                {namePopup}{\" \"}\n                <span className=\"text-gray-600\">{countryPopup}</span>{\" \"}\n              </p>\n            </Popup>\n          </Marker>\n        </Map>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}